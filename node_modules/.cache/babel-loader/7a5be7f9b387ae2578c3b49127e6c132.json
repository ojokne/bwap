{"ast":null,"code":"var _jsxFileName = \"/home/oen/Documents/react/bwap/src/components/Spin.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\"; // Can be a string as well. Need to ensure each key-value pair ends with ;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: green;\n`;\n\nfunction Spin() {\n  _s();\n\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ffffff\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sweet-loading\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setLoading(!loading),\n      children: \"Toggle Loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: color,\n      onChange: input => setColor(input.target.value),\n      placeholder: \"Color of the loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: color,\n      loading: loading,\n      css: override,\n      size: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Spin, \"seaEM2XOjsxyl7PK3XOA1GtO+dM=\");\n\n_c = Spin;\nexport default Spin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spin\");","map":{"version":3,"sources":["/home/oen/Documents/react/bwap/src/components/Spin.jsx"],"names":["useState","css","ClipLoader","override","Spin","loading","setLoading","color","setColor","input","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB,C,CAEA;;;AACA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA;AACA,CAJA;;AAMA,SAASG,IAAT,GAAgB;AAAA;;AACd,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,SAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMM,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,KAAK,EAAEE,KADT;AAEE,MAAA,QAAQ,EAAGE,KAAD,IAAWD,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAF/B;AAGE,MAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEJ,KAAnB;AAA0B,MAAA,OAAO,EAAEF,OAAnC;AAA4C,MAAA,GAAG,EAAEF,QAAjD;AAA2D,MAAA,IAAI,EAAE;AAAjE;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAhBQC,I;;KAAAA,I;AAiBT,eAAeA,IAAf","sourcesContent":["import { useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: green;\n`;\n\nfunction Spin() {\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ffffff\");\n\n  return (\n    <div className=\"sweet-loading\">\n      <button onClick={() => setLoading(!loading)}>Toggle Loader</button>\n      <input\n        value={color}\n        onChange={(input) => setColor(input.target.value)}\n        placeholder=\"Color of the loader\"\n      />\n\n      <ClipLoader color={color} loading={loading} css={override} size={10} />\n    </div>\n  );\n}\nexport default Spin;\n"]},"metadata":{},"sourceType":"module"}